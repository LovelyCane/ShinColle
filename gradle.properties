# Gradle Properties
org.gradle.jvmargs=-Xmx3G
# Source Options
# Compilation Options
generate_sources_jar=true
generate_javadocs_jar=false
# Testing
enable_junit_testing=true
show_testing_output=false
# Mod Information
# HIGHLY RECOMMEND complying with SemVer for mod_version: https://semver.org/
mod_version=1.12.2.1.3
root_package=com.lulan.shincolle
mod_id=shincolle
mod_name=Shinkeiseikan Collection
# Mapping Properties
mapping_channel=stable
mapping_version=39
use_dependency_at_files=true
# Run Configurations
# If multiple arguments/tweak classes are stated, use spaces as the delimiter
minecraft_username=Developer
extra_jvm_args=
extra_tweak_classes=
# Maven Publishing (Provide secret: MAVEN_USER, MAVEN_PASS)
publish_to_maven=false
# Good for debugging artifacts before uploading to remote maven
# GitHub actions won't run if this is true, test this by running the task `publishToMavenLocal`
publish_to_local_maven=false
maven_name=${mod_name}
maven_url=
# Publishing
# release_type can only be: release, beta or alpha (applies to CurseForge / Modrinth)
release_type=release
publish_with_changelog=${{ it.file('CHANGELOG.md').exists() }}
# Publishing to CurseForge (Provide secret: CURSEFORGE_TOKEN)
# To configure dependencies, head to publishing.gradle's curseforge block
publish_to_curseforge=false
# CurseForge project ID must be the numerical ID and not the slug
curseforge_project_id=
curseforge_debug=false
# Publishing to Modrinth (Provide secret: MODRINTH_TOKEN), the token must have the `CREATE_VERSION` and `PROJECT_WRITE` permissions
# To configure dependencies, head to publishing.gradle's modrinth block
publish_to_modrinth=false
modrinth_project_id=
# Allows gradle to publish updated READMEs to the project body (via the modrinthSyncBody task)
modrinth_sync_readme=false
modrinth_debug=false
# If any properties changes below this line, refresh gradle again to ensure everything is working correctly.
# Modify Minecraft Sources
# RetroFuturaGradle allows Minecraft sources to be edited, and have the changes reflected upon running it
# Good for previews when coremodding, or generally seeing how behaviours can change with certain code applied/unapplied
# Turning this on allows Minecraft sources to persist and not regenerate
change_minecraft_sources=false
# Tags
# A RetroFuturaGradle concept akin to Ant ReplaceTokens
# A class is generated at build-time for compilation, to describe properties that have values that could change at build time such as versioning
# Class name is configurable with the `tag_class_name` property
# Tag properties can be stated in the `tags.properties` file, references are allowed
use_tags=true
tag_class_name=${root_package}.${mod_id}.Tags